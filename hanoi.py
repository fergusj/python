#encoding:utf8
"""
汉诺（Hanoi）塔源自于古印度，又称为河内塔。汉诺塔是非常著名的智力趣题，在很多算法书籍和智力竞赛中都有涉及。
汉诺塔问题的大意如下：
勃拉玛是古印度的一个开天辟地的神，其在一个宇宙中留下了三根金刚石的棒，第一根上面套着64个大小不一的圆形金片（圆盘）。
其中，最大的金片在最底下，其余的依次叠上去，且一个比一个小。
勃拉玛要求众僧将该金刚石棒中的金片逐个地移到另一根棒上，规定一次只能移动一个金片，且金片在放到棒上时，大的只能放在小的下面，
但是可以利用中间的一个棒作为辅助移动使用。
"""

a=["A",5,4,3,2,1]
b=["B"]
c=["C"]

def hanoi(a,b,c,n):#参数的设定是个技巧，一定要有n作为移动的个数
    if n==1:
        b.append(a.pop())
        return#必须要有return作为程序出口，否则程序无法结束
    
    hanoi(a, c, b, n-1)   
    b.append(a.pop())#列表的使用pop和append方法
    hanoi(c, b, a, n-1)

hanoi(a, b, c, 5)
print a,b,c



"""#这个是指出每一步的移动步骤   官方的答案
def move(a, b, c, n):
    if n == 1:
        print a, "->", c
        return
    move(a, c, b, n - 1)
    print a, "->" ,c
    move(b, a, c, n - 1)

n = 3
move('A','B','C', n)
"""

